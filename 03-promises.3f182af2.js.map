{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAGMC,EAASC,SAASC,cAAc,SACtCF,EAAOG,iBAAiB,SAIxB,SAAoBC,GACpBC,EAAKD,EAAME,OAAOC,OAAUH,EAAME,OAAOE,K,IAJzCR,EAAOG,iBAAiB,UAOxB,SAAsBC,GACpBA,EAAMK,iBAGJ,IAFF,IAAOC,EAAuBL,EAAvBM,MAAOC,EAAgBP,EAAhBO,KAAMC,EAAUR,EAAVQ,OAETC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAE,CAIhCC,EAAcD,EAFHJ,GAASI,EAAI,GAAKF,GAEFI,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUP,EAAKM,EAALN,MAEzCb,EAAAqB,OAAOC,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAANV,EAAM,M,IAE5DW,OAAM,SAAAL,G,IAAGC,EAAQD,EAARC,SAAUP,EAAKM,EAALN,MAChBb,EAAAqB,OAAOI,QAAQ,sBAAuCF,OAAfH,EAAS,QAAYG,OAANV,EAAM,M,IAG1EP,EAAME,OAAOkB,O,IArBf,IAAMnB,EAAO,GAwBb,SAASU,EAAcG,EAAUP,GAC/B,IAAMc,EAAgBC,KAAKC,SAAW,GACpC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAW,WACHN,GACAI,EAAQ,CAAEX,WAAUP,UAExBmB,EAAO,CAAEZ,WAAUP,S,GACpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('input', selectData);\nformEl.addEventListener('submit', onFormSubmit);\n\nconst data = {};\nfunction selectData(event){\ndata[event.target.name] = + event.target.value\n};\n\nfunction onFormSubmit(event){\n  event.preventDefault();\n  const {delay, step, amount} = data\n  \n    for (let i = 1; i <= amount; i += 1){\n      \n    let newDelay = delay + (i - 1) * step\n        \n        createPromise(i, newDelay).then(({ position, delay }) => {\n        \n            Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        })\n            .catch(({ position, delay }) => {\n                Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n            });\n    };\n  event.target.reset()\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({ position, delay })\n            }\n            reject({ position, delay })\n        }, delay)\n    });\n};\n\n\n//  -------  проміси \n// const promise = new Promise((resolve, reject) => {\n//   const canFulfill = Math.random() > 0.5;\n//   if (canFulfill) {\n//     resolve('виповнено fulfilled');\n//   }\n//   reject('помилка rejected');\n// });\n//     метод then є у проміса на прототипі і так можна у зовнішньому коді отримтаи результат промісу\n// const promise = new Promise((resolve, reject) => {\n//   const canFulfill = Math.random() > 0.5;\n//   setTimeout(() => {\n//     if (canFulfill) {\n//       resolve('виповнено fulfilled');\n//     }\n//     reject('помилка rejected');\n//   }, 2000);\n// });\n\n// console.log(promise);\n\n\n// // планування якщо проміс успішний -  із resolve запишеться у параметр result  виконується ця функція, неуспішний - reject запишеться у параметр error\n// promise.then(result => {\n//   console.log(result)\n// }, error => {\n//   console.log(error);\n// },\n// );\n// // або зовнішніми функціями \n// promise.then(onFulfilled, onRejected);\n\n// function onFulfilled(result) {\n//   console.log('onFulfilled -> onFulfilled');\n\n// };\n// function onRejected(error) {\n//   console.log('onRejected -> onRejected');\n// };"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","addEventListener","event","$ce04d3a99e08e73b$var$data","target","name","value","preventDefault","delay1","delay","step","amount","i","$ce04d3a99e08e73b$var$createPromise","then","param","position","Notify","success","concat","catch","failure","reset","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.3f182af2.js.map"}